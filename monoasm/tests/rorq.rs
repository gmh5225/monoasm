  extern crate monoasm;
  extern crate monoasm_macro;
  use std::io::Write;

  use monoasm::*;
  use monoasm_macro::monoasm;

  #[test]
  fn rorq() {
      let mut jit: JitMemory = JitMemory::new();
      monoasm!(
          &mut jit,
	rorq rax, 1;
	rorq rax, 18;
	rorq rcx, 1;
	rorq rcx, 18;
	rorq rdx, 1;
	rorq rdx, 18;
	rorq rbx, 1;
	rorq rbx, 18;
	rorq rsp, 1;
	rorq rsp, 18;
	rorq rbp, 1;
	rorq rbp, 18;
	rorq rsi, 1;
	rorq rsi, 18;
	rorq rdi, 1;
	rorq rdi, 18;
	rorq r8, 1;
	rorq r8, 18;
	rorq r9, 1;
	rorq r9, 18;
	rorq r10, 1;
	rorq r10, 18;
	rorq r11, 1;
	rorq r11, 18;
	rorq r12, 1;
	rorq r12, 18;
	rorq r13, 1;
	rorq r13, 18;
	rorq r14, 1;
	rorq r14, 18;
	rorq r15, 1;
	rorq r15, 18;
	rorq [rax], 1;
	rorq [rax], 18;
	rorq [rax + 16], 1;
	rorq [rax + 16], 18;
	rorq [rax + 512], 1;
	rorq [rax + 512], 18;
	rorq [rcx], 1;
	rorq [rcx], 18;
	rorq [rcx + 16], 1;
	rorq [rcx + 16], 18;
	rorq [rcx + 512], 1;
	rorq [rcx + 512], 18;
	rorq [rdx], 1;
	rorq [rdx], 18;
	rorq [rdx + 16], 1;
	rorq [rdx + 16], 18;
	rorq [rdx + 512], 1;
	rorq [rdx + 512], 18;
	rorq [rbx], 1;
	rorq [rbx], 18;
	rorq [rbx + 16], 1;
	rorq [rbx + 16], 18;
	rorq [rbx + 512], 1;
	rorq [rbx + 512], 18;
	rorq [rsp], 1;
	rorq [rsp], 18;
	rorq [rsp + 16], 1;
	rorq [rsp + 16], 18;
	rorq [rsp + 512], 1;
	rorq [rsp + 512], 18;
	rorq [rbp], 1;
	rorq [rbp], 18;
	rorq [rbp + 16], 1;
	rorq [rbp + 16], 18;
	rorq [rbp + 512], 1;
	rorq [rbp + 512], 18;
	rorq [rsi], 1;
	rorq [rsi], 18;
	rorq [rsi + 16], 1;
	rorq [rsi + 16], 18;
	rorq [rsi + 512], 1;
	rorq [rsi + 512], 18;
	rorq [rdi], 1;
	rorq [rdi], 18;
	rorq [rdi + 16], 1;
	rorq [rdi + 16], 18;
	rorq [rdi + 512], 1;
	rorq [rdi + 512], 18;
	rorq [r8], 1;
	rorq [r8], 18;
	rorq [r8 + 16], 1;
	rorq [r8 + 16], 18;
	rorq [r8 + 512], 1;
	rorq [r8 + 512], 18;
	rorq [r9], 1;
	rorq [r9], 18;
	rorq [r9 + 16], 1;
	rorq [r9 + 16], 18;
	rorq [r9 + 512], 1;
	rorq [r9 + 512], 18;
	rorq [r10], 1;
	rorq [r10], 18;
	rorq [r10 + 16], 1;
	rorq [r10 + 16], 18;
	rorq [r10 + 512], 1;
	rorq [r10 + 512], 18;
	rorq [r11], 1;
	rorq [r11], 18;
	rorq [r11 + 16], 1;
	rorq [r11 + 16], 18;
	rorq [r11 + 512], 1;
	rorq [r11 + 512], 18;
	rorq [r12], 1;
	rorq [r12], 18;
	rorq [r12 + 16], 1;
	rorq [r12 + 16], 18;
	rorq [r12 + 512], 1;
	rorq [r12 + 512], 18;
	rorq [r13], 1;
	rorq [r13], 18;
	rorq [r13 + 16], 1;
	rorq [r13 + 16], 18;
	rorq [r13 + 512], 1;
	rorq [r13 + 512], 18;
	rorq [r14], 1;
	rorq [r14], 18;
	rorq [r14 + 16], 1;
	rorq [r14 + 16], 18;
	rorq [r14 + 512], 1;
	rorq [r14 + 512], 18;
	rorq [r15], 1;
	rorq [r15], 18;
	rorq [r15 + 16], 1;
	rorq [r15 + 16], 18;
	rorq [r15 + 512], 1;
	rorq [r15 + 512], 18;
	rorq [rip], 1;
	rorq [rip], 18;
	rorq [rip + 16], 1;
	rorq [rip + 16], 18;
	rorq [rip + 512], 1;
	rorq [rip + 512], 18;
	rorq [rax + rax * 1], 1;
	rorq [rax + rax * 1], 18;
	rorq [rax + rax * 1 + 20], 1;
	rorq [rax + rax * 1 + 20], 18;
	rorq [rax + rax * 8], 1;
	rorq [rax + rax * 8], 18;
	rorq [rax + rax * 8 + 20], 1;
	rorq [rax + rax * 8 + 20], 18;
	rorq [rax + r15 * 1], 1;
	rorq [rax + r15 * 1], 18;
	rorq [rax + r15 * 1 + 20], 1;
	rorq [rax + r15 * 1 + 20], 18;
	rorq [rax + r15 * 8], 1;
	rorq [rax + r15 * 8], 18;
	rorq [rax + r15 * 8 + 20], 1;
	rorq [rax + r15 * 8 + 20], 18;
	rorq [rcx + rax * 1], 1;
	rorq [rcx + rax * 1], 18;
	rorq [rcx + rax * 1 + 20], 1;
	rorq [rcx + rax * 1 + 20], 18;
	rorq [rcx + rax * 8], 1;
	rorq [rcx + rax * 8], 18;
	rorq [rcx + rax * 8 + 20], 1;
	rorq [rcx + rax * 8 + 20], 18;
	rorq [rcx + r15 * 1], 1;
	rorq [rcx + r15 * 1], 18;
	rorq [rcx + r15 * 1 + 20], 1;
	rorq [rcx + r15 * 1 + 20], 18;
	rorq [rcx + r15 * 8], 1;
	rorq [rcx + r15 * 8], 18;
	rorq [rcx + r15 * 8 + 20], 1;
	rorq [rcx + r15 * 8 + 20], 18;
	rorq [rdx + rax * 1], 1;
	rorq [rdx + rax * 1], 18;
	rorq [rdx + rax * 1 + 20], 1;
	rorq [rdx + rax * 1 + 20], 18;
	rorq [rdx + rax * 8], 1;
	rorq [rdx + rax * 8], 18;
	rorq [rdx + rax * 8 + 20], 1;
	rorq [rdx + rax * 8 + 20], 18;
	rorq [rdx + r15 * 1], 1;
	rorq [rdx + r15 * 1], 18;
	rorq [rdx + r15 * 1 + 20], 1;
	rorq [rdx + r15 * 1 + 20], 18;
	rorq [rdx + r15 * 8], 1;
	rorq [rdx + r15 * 8], 18;
	rorq [rdx + r15 * 8 + 20], 1;
	rorq [rdx + r15 * 8 + 20], 18;
	rorq [rbx + rax * 1], 1;
	rorq [rbx + rax * 1], 18;
	rorq [rbx + rax * 1 + 20], 1;
	rorq [rbx + rax * 1 + 20], 18;
	rorq [rbx + rax * 8], 1;
	rorq [rbx + rax * 8], 18;
	rorq [rbx + rax * 8 + 20], 1;
	rorq [rbx + rax * 8 + 20], 18;
	rorq [rbx + r15 * 1], 1;
	rorq [rbx + r15 * 1], 18;
	rorq [rbx + r15 * 1 + 20], 1;
	rorq [rbx + r15 * 1 + 20], 18;
	rorq [rbx + r15 * 8], 1;
	rorq [rbx + r15 * 8], 18;
	rorq [rbx + r15 * 8 + 20], 1;
	rorq [rbx + r15 * 8 + 20], 18;
	rorq [rsp + rax * 1], 1;
	rorq [rsp + rax * 1], 18;
	rorq [rsp + rax * 1 + 20], 1;
	rorq [rsp + rax * 1 + 20], 18;
	rorq [rsp + rax * 8], 1;
	rorq [rsp + rax * 8], 18;
	rorq [rsp + rax * 8 + 20], 1;
	rorq [rsp + rax * 8 + 20], 18;
	rorq [rsp + r15 * 1], 1;
	rorq [rsp + r15 * 1], 18;
	rorq [rsp + r15 * 1 + 20], 1;
	rorq [rsp + r15 * 1 + 20], 18;
	rorq [rsp + r15 * 8], 1;
	rorq [rsp + r15 * 8], 18;
	rorq [rsp + r15 * 8 + 20], 1;
	rorq [rsp + r15 * 8 + 20], 18;
	rorq [rbp + rax * 1], 1;
	rorq [rbp + rax * 1], 18;
	rorq [rbp + rax * 1 + 20], 1;
	rorq [rbp + rax * 1 + 20], 18;
	rorq [rbp + rax * 8], 1;
	rorq [rbp + rax * 8], 18;
	rorq [rbp + rax * 8 + 20], 1;
	rorq [rbp + rax * 8 + 20], 18;
	rorq [rbp + r15 * 1], 1;
	rorq [rbp + r15 * 1], 18;
	rorq [rbp + r15 * 1 + 20], 1;
	rorq [rbp + r15 * 1 + 20], 18;
	rorq [rbp + r15 * 8], 1;
	rorq [rbp + r15 * 8], 18;
	rorq [rbp + r15 * 8 + 20], 1;
	rorq [rbp + r15 * 8 + 20], 18;
	rorq [rsi + rax * 1], 1;
	rorq [rsi + rax * 1], 18;
	rorq [rsi + rax * 1 + 20], 1;
	rorq [rsi + rax * 1 + 20], 18;
	rorq [rsi + rax * 8], 1;
	rorq [rsi + rax * 8], 18;
	rorq [rsi + rax * 8 + 20], 1;
	rorq [rsi + rax * 8 + 20], 18;
	rorq [rsi + r15 * 1], 1;
	rorq [rsi + r15 * 1], 18;
	rorq [rsi + r15 * 1 + 20], 1;
	rorq [rsi + r15 * 1 + 20], 18;
	rorq [rsi + r15 * 8], 1;
	rorq [rsi + r15 * 8], 18;
	rorq [rsi + r15 * 8 + 20], 1;
	rorq [rsi + r15 * 8 + 20], 18;
	rorq [rdi + rax * 1], 1;
	rorq [rdi + rax * 1], 18;
	rorq [rdi + rax * 1 + 20], 1;
	rorq [rdi + rax * 1 + 20], 18;
	rorq [rdi + rax * 8], 1;
	rorq [rdi + rax * 8], 18;
	rorq [rdi + rax * 8 + 20], 1;
	rorq [rdi + rax * 8 + 20], 18;
	rorq [rdi + r15 * 1], 1;
	rorq [rdi + r15 * 1], 18;
	rorq [rdi + r15 * 1 + 20], 1;
	rorq [rdi + r15 * 1 + 20], 18;
	rorq [rdi + r15 * 8], 1;
	rorq [rdi + r15 * 8], 18;
	rorq [rdi + r15 * 8 + 20], 1;
	rorq [rdi + r15 * 8 + 20], 18;
	rorq [r8 + rax * 1], 1;
	rorq [r8 + rax * 1], 18;
	rorq [r8 + rax * 1 + 20], 1;
	rorq [r8 + rax * 1 + 20], 18;
	rorq [r8 + rax * 8], 1;
	rorq [r8 + rax * 8], 18;
	rorq [r8 + rax * 8 + 20], 1;
	rorq [r8 + rax * 8 + 20], 18;
	rorq [r8 + r15 * 1], 1;
	rorq [r8 + r15 * 1], 18;
	rorq [r8 + r15 * 1 + 20], 1;
	rorq [r8 + r15 * 1 + 20], 18;
	rorq [r8 + r15 * 8], 1;
	rorq [r8 + r15 * 8], 18;
	rorq [r8 + r15 * 8 + 20], 1;
	rorq [r8 + r15 * 8 + 20], 18;
	rorq [r9 + rax * 1], 1;
	rorq [r9 + rax * 1], 18;
	rorq [r9 + rax * 1 + 20], 1;
	rorq [r9 + rax * 1 + 20], 18;
	rorq [r9 + rax * 8], 1;
	rorq [r9 + rax * 8], 18;
	rorq [r9 + rax * 8 + 20], 1;
	rorq [r9 + rax * 8 + 20], 18;
	rorq [r9 + r15 * 1], 1;
	rorq [r9 + r15 * 1], 18;
	rorq [r9 + r15 * 1 + 20], 1;
	rorq [r9 + r15 * 1 + 20], 18;
	rorq [r9 + r15 * 8], 1;
	rorq [r9 + r15 * 8], 18;
	rorq [r9 + r15 * 8 + 20], 1;
	rorq [r9 + r15 * 8 + 20], 18;
	rorq [r10 + rax * 1], 1;
	rorq [r10 + rax * 1], 18;
	rorq [r10 + rax * 1 + 20], 1;
	rorq [r10 + rax * 1 + 20], 18;
	rorq [r10 + rax * 8], 1;
	rorq [r10 + rax * 8], 18;
	rorq [r10 + rax * 8 + 20], 1;
	rorq [r10 + rax * 8 + 20], 18;
	rorq [r10 + r15 * 1], 1;
	rorq [r10 + r15 * 1], 18;
	rorq [r10 + r15 * 1 + 20], 1;
	rorq [r10 + r15 * 1 + 20], 18;
	rorq [r10 + r15 * 8], 1;
	rorq [r10 + r15 * 8], 18;
	rorq [r10 + r15 * 8 + 20], 1;
	rorq [r10 + r15 * 8 + 20], 18;
	rorq [r11 + rax * 1], 1;
	rorq [r11 + rax * 1], 18;
	rorq [r11 + rax * 1 + 20], 1;
	rorq [r11 + rax * 1 + 20], 18;
	rorq [r11 + rax * 8], 1;
	rorq [r11 + rax * 8], 18;
	rorq [r11 + rax * 8 + 20], 1;
	rorq [r11 + rax * 8 + 20], 18;
	rorq [r11 + r15 * 1], 1;
	rorq [r11 + r15 * 1], 18;
	rorq [r11 + r15 * 1 + 20], 1;
	rorq [r11 + r15 * 1 + 20], 18;
	rorq [r11 + r15 * 8], 1;
	rorq [r11 + r15 * 8], 18;
	rorq [r11 + r15 * 8 + 20], 1;
	rorq [r11 + r15 * 8 + 20], 18;
	rorq [r12 + rax * 1], 1;
	rorq [r12 + rax * 1], 18;
	rorq [r12 + rax * 1 + 20], 1;
	rorq [r12 + rax * 1 + 20], 18;
	rorq [r12 + rax * 8], 1;
	rorq [r12 + rax * 8], 18;
	rorq [r12 + rax * 8 + 20], 1;
	rorq [r12 + rax * 8 + 20], 18;
	rorq [r12 + r15 * 1], 1;
	rorq [r12 + r15 * 1], 18;
	rorq [r12 + r15 * 1 + 20], 1;
	rorq [r12 + r15 * 1 + 20], 18;
	rorq [r12 + r15 * 8], 1;
	rorq [r12 + r15 * 8], 18;
	rorq [r12 + r15 * 8 + 20], 1;
	rorq [r12 + r15 * 8 + 20], 18;
	rorq [r13 + rax * 1], 1;
	rorq [r13 + rax * 1], 18;
	rorq [r13 + rax * 1 + 20], 1;
	rorq [r13 + rax * 1 + 20], 18;
	rorq [r13 + rax * 8], 1;
	rorq [r13 + rax * 8], 18;
	rorq [r13 + rax * 8 + 20], 1;
	rorq [r13 + rax * 8 + 20], 18;
	rorq [r13 + r15 * 1], 1;
	rorq [r13 + r15 * 1], 18;
	rorq [r13 + r15 * 1 + 20], 1;
	rorq [r13 + r15 * 1 + 20], 18;
	rorq [r13 + r15 * 8], 1;
	rorq [r13 + r15 * 8], 18;
	rorq [r13 + r15 * 8 + 20], 1;
	rorq [r13 + r15 * 8 + 20], 18;
	rorq [r14 + rax * 1], 1;
	rorq [r14 + rax * 1], 18;
	rorq [r14 + rax * 1 + 20], 1;
	rorq [r14 + rax * 1 + 20], 18;
	rorq [r14 + rax * 8], 1;
	rorq [r14 + rax * 8], 18;
	rorq [r14 + rax * 8 + 20], 1;
	rorq [r14 + rax * 8 + 20], 18;
	rorq [r14 + r15 * 1], 1;
	rorq [r14 + r15 * 1], 18;
	rorq [r14 + r15 * 1 + 20], 1;
	rorq [r14 + r15 * 1 + 20], 18;
	rorq [r14 + r15 * 8], 1;
	rorq [r14 + r15 * 8], 18;
	rorq [r14 + r15 * 8 + 20], 1;
	rorq [r14 + r15 * 8 + 20], 18;
	rorq [r15 + rax * 1], 1;
	rorq [r15 + rax * 1], 18;
	rorq [r15 + rax * 1 + 20], 1;
	rorq [r15 + rax * 1 + 20], 18;
	rorq [r15 + rax * 8], 1;
	rorq [r15 + rax * 8], 18;
	rorq [r15 + rax * 8 + 20], 1;
	rorq [r15 + rax * 8 + 20], 18;
	rorq [r15 + r15 * 1], 1;
	rorq [r15 + r15 * 1], 18;
	rorq [r15 + r15 * 1 + 20], 1;
	rorq [r15 + r15 * 1 + 20], 18;
	rorq [r15 + r15 * 8], 1;
	rorq [r15 + r15 * 8], 18;
	rorq [r15 + r15 * 8 + 20], 1;
	rorq [r15 + r15 * 8 + 20], 18;
	rorq rax, 1;
	rorq rax, 18;
	rorq rcx, 1;
	rorq rcx, 18;
	rorq rdx, 1;
	rorq rdx, 18;
	rorq rbx, 1;
	rorq rbx, 18;
	rorq rsp, 1;
	rorq rsp, 18;
	rorq rbp, 1;
	rorq rbp, 18;
	rorq rsi, 1;
	rorq rsi, 18;
	rorq rdi, 1;
	rorq rdi, 18;
	rorq r8, 1;
	rorq r8, 18;
	rorq r9, 1;
	rorq r9, 18;
	rorq r10, 1;
	rorq r10, 18;
	rorq r11, 1;
	rorq r11, 18;
	rorq r12, 1;
	rorq r12, 18;
	rorq r13, 1;
	rorq r13, 18;
	rorq r14, 1;
	rorq r14, 18;
	rorq r15, 1;
	rorq r15, 18;
	rorq [rax], 1;
	rorq [rax], 18;
	rorq [rax + 16], 1;
	rorq [rax + 16], 18;
	rorq [rax + 512], 1;
	rorq [rax + 512], 18;
	rorq [rcx], 1;
	rorq [rcx], 18;
	rorq [rcx + 16], 1;
	rorq [rcx + 16], 18;
	rorq [rcx + 512], 1;
	rorq [rcx + 512], 18;
	rorq [rdx], 1;
	rorq [rdx], 18;
	rorq [rdx + 16], 1;
	rorq [rdx + 16], 18;
	rorq [rdx + 512], 1;
	rorq [rdx + 512], 18;
	rorq [rbx], 1;
	rorq [rbx], 18;
	rorq [rbx + 16], 1;
	rorq [rbx + 16], 18;
	rorq [rbx + 512], 1;
	rorq [rbx + 512], 18;
	rorq [rsp], 1;
	rorq [rsp], 18;
	rorq [rsp + 16], 1;
	rorq [rsp + 16], 18;
	rorq [rsp + 512], 1;
	rorq [rsp + 512], 18;
	rorq [rbp], 1;
	rorq [rbp], 18;
	rorq [rbp + 16], 1;
	rorq [rbp + 16], 18;
	rorq [rbp + 512], 1;
	rorq [rbp + 512], 18;
	rorq [rsi], 1;
	rorq [rsi], 18;
	rorq [rsi + 16], 1;
	rorq [rsi + 16], 18;
	rorq [rsi + 512], 1;
	rorq [rsi + 512], 18;
	rorq [rdi], 1;
	rorq [rdi], 18;
	rorq [rdi + 16], 1;
	rorq [rdi + 16], 18;
	rorq [rdi + 512], 1;
	rorq [rdi + 512], 18;
	rorq [r8], 1;
	rorq [r8], 18;
	rorq [r8 + 16], 1;
	rorq [r8 + 16], 18;
	rorq [r8 + 512], 1;
	rorq [r8 + 512], 18;
	rorq [r9], 1;
	rorq [r9], 18;
	rorq [r9 + 16], 1;
	rorq [r9 + 16], 18;
	rorq [r9 + 512], 1;
	rorq [r9 + 512], 18;
	rorq [r10], 1;
	rorq [r10], 18;
	rorq [r10 + 16], 1;
	rorq [r10 + 16], 18;
	rorq [r10 + 512], 1;
	rorq [r10 + 512], 18;
	rorq [r11], 1;
	rorq [r11], 18;
	rorq [r11 + 16], 1;
	rorq [r11 + 16], 18;
	rorq [r11 + 512], 1;
	rorq [r11 + 512], 18;
	rorq [r12], 1;
	rorq [r12], 18;
	rorq [r12 + 16], 1;
	rorq [r12 + 16], 18;
	rorq [r12 + 512], 1;
	rorq [r12 + 512], 18;
	rorq [r13], 1;
	rorq [r13], 18;
	rorq [r13 + 16], 1;
	rorq [r13 + 16], 18;
	rorq [r13 + 512], 1;
	rorq [r13 + 512], 18;
	rorq [r14], 1;
	rorq [r14], 18;
	rorq [r14 + 16], 1;
	rorq [r14 + 16], 18;
	rorq [r14 + 512], 1;
	rorq [r14 + 512], 18;
	rorq [r15], 1;
	rorq [r15], 18;
	rorq [r15 + 16], 1;
	rorq [r15 + 16], 18;
	rorq [r15 + 512], 1;
	rorq [r15 + 512], 18;
	rorq [rip], 1;
	rorq [rip], 18;
	rorq [rip + 16], 1;
	rorq [rip + 16], 18;
	rorq [rip + 512], 1;
	rorq [rip + 512], 18;
	rorq [rax + rax * 1], 1;
	rorq [rax + rax * 1], 18;
	rorq [rax + rax * 1 + 20], 1;
	rorq [rax + rax * 1 + 20], 18;
	rorq [rax + rax * 8], 1;
	rorq [rax + rax * 8], 18;
	rorq [rax + rax * 8 + 20], 1;
	rorq [rax + rax * 8 + 20], 18;
	rorq [rax + r15 * 1], 1;
	rorq [rax + r15 * 1], 18;
	rorq [rax + r15 * 1 + 20], 1;
	rorq [rax + r15 * 1 + 20], 18;
	rorq [rax + r15 * 8], 1;
	rorq [rax + r15 * 8], 18;
	rorq [rax + r15 * 8 + 20], 1;
	rorq [rax + r15 * 8 + 20], 18;
	rorq [rcx + rax * 1], 1;
	rorq [rcx + rax * 1], 18;
	rorq [rcx + rax * 1 + 20], 1;
	rorq [rcx + rax * 1 + 20], 18;
	rorq [rcx + rax * 8], 1;
	rorq [rcx + rax * 8], 18;
	rorq [rcx + rax * 8 + 20], 1;
	rorq [rcx + rax * 8 + 20], 18;
	rorq [rcx + r15 * 1], 1;
	rorq [rcx + r15 * 1], 18;
	rorq [rcx + r15 * 1 + 20], 1;
	rorq [rcx + r15 * 1 + 20], 18;
	rorq [rcx + r15 * 8], 1;
	rorq [rcx + r15 * 8], 18;
	rorq [rcx + r15 * 8 + 20], 1;
	rorq [rcx + r15 * 8 + 20], 18;
	rorq [rdx + rax * 1], 1;
	rorq [rdx + rax * 1], 18;
	rorq [rdx + rax * 1 + 20], 1;
	rorq [rdx + rax * 1 + 20], 18;
	rorq [rdx + rax * 8], 1;
	rorq [rdx + rax * 8], 18;
	rorq [rdx + rax * 8 + 20], 1;
	rorq [rdx + rax * 8 + 20], 18;
	rorq [rdx + r15 * 1], 1;
	rorq [rdx + r15 * 1], 18;
	rorq [rdx + r15 * 1 + 20], 1;
	rorq [rdx + r15 * 1 + 20], 18;
	rorq [rdx + r15 * 8], 1;
	rorq [rdx + r15 * 8], 18;
	rorq [rdx + r15 * 8 + 20], 1;
	rorq [rdx + r15 * 8 + 20], 18;
	rorq [rbx + rax * 1], 1;
	rorq [rbx + rax * 1], 18;
	rorq [rbx + rax * 1 + 20], 1;
	rorq [rbx + rax * 1 + 20], 18;
	rorq [rbx + rax * 8], 1;
	rorq [rbx + rax * 8], 18;
	rorq [rbx + rax * 8 + 20], 1;
	rorq [rbx + rax * 8 + 20], 18;
	rorq [rbx + r15 * 1], 1;
	rorq [rbx + r15 * 1], 18;
	rorq [rbx + r15 * 1 + 20], 1;
	rorq [rbx + r15 * 1 + 20], 18;
	rorq [rbx + r15 * 8], 1;
	rorq [rbx + r15 * 8], 18;
	rorq [rbx + r15 * 8 + 20], 1;
	rorq [rbx + r15 * 8 + 20], 18;
	rorq [rsp + rax * 1], 1;
	rorq [rsp + rax * 1], 18;
	rorq [rsp + rax * 1 + 20], 1;
	rorq [rsp + rax * 1 + 20], 18;
	rorq [rsp + rax * 8], 1;
	rorq [rsp + rax * 8], 18;
	rorq [rsp + rax * 8 + 20], 1;
	rorq [rsp + rax * 8 + 20], 18;
	rorq [rsp + r15 * 1], 1;
	rorq [rsp + r15 * 1], 18;
	rorq [rsp + r15 * 1 + 20], 1;
	rorq [rsp + r15 * 1 + 20], 18;
	rorq [rsp + r15 * 8], 1;
	rorq [rsp + r15 * 8], 18;
	rorq [rsp + r15 * 8 + 20], 1;
	rorq [rsp + r15 * 8 + 20], 18;
	rorq [rbp + rax * 1], 1;
	rorq [rbp + rax * 1], 18;
	rorq [rbp + rax * 1 + 20], 1;
	rorq [rbp + rax * 1 + 20], 18;
	rorq [rbp + rax * 8], 1;
	rorq [rbp + rax * 8], 18;
	rorq [rbp + rax * 8 + 20], 1;
	rorq [rbp + rax * 8 + 20], 18;
	rorq [rbp + r15 * 1], 1;
	rorq [rbp + r15 * 1], 18;
	rorq [rbp + r15 * 1 + 20], 1;
	rorq [rbp + r15 * 1 + 20], 18;
	rorq [rbp + r15 * 8], 1;
	rorq [rbp + r15 * 8], 18;
	rorq [rbp + r15 * 8 + 20], 1;
	rorq [rbp + r15 * 8 + 20], 18;
	rorq [rsi + rax * 1], 1;
	rorq [rsi + rax * 1], 18;
	rorq [rsi + rax * 1 + 20], 1;
	rorq [rsi + rax * 1 + 20], 18;
	rorq [rsi + rax * 8], 1;
	rorq [rsi + rax * 8], 18;
	rorq [rsi + rax * 8 + 20], 1;
	rorq [rsi + rax * 8 + 20], 18;
	rorq [rsi + r15 * 1], 1;
	rorq [rsi + r15 * 1], 18;
	rorq [rsi + r15 * 1 + 20], 1;
	rorq [rsi + r15 * 1 + 20], 18;
	rorq [rsi + r15 * 8], 1;
	rorq [rsi + r15 * 8], 18;
	rorq [rsi + r15 * 8 + 20], 1;
	rorq [rsi + r15 * 8 + 20], 18;
	rorq [rdi + rax * 1], 1;
	rorq [rdi + rax * 1], 18;
	rorq [rdi + rax * 1 + 20], 1;
	rorq [rdi + rax * 1 + 20], 18;
	rorq [rdi + rax * 8], 1;
	rorq [rdi + rax * 8], 18;
	rorq [rdi + rax * 8 + 20], 1;
	rorq [rdi + rax * 8 + 20], 18;
	rorq [rdi + r15 * 1], 1;
	rorq [rdi + r15 * 1], 18;
	rorq [rdi + r15 * 1 + 20], 1;
	rorq [rdi + r15 * 1 + 20], 18;
	rorq [rdi + r15 * 8], 1;
	rorq [rdi + r15 * 8], 18;
	rorq [rdi + r15 * 8 + 20], 1;
	rorq [rdi + r15 * 8 + 20], 18;
	rorq [r8 + rax * 1], 1;
	rorq [r8 + rax * 1], 18;
	rorq [r8 + rax * 1 + 20], 1;
	rorq [r8 + rax * 1 + 20], 18;
	rorq [r8 + rax * 8], 1;
	rorq [r8 + rax * 8], 18;
	rorq [r8 + rax * 8 + 20], 1;
	rorq [r8 + rax * 8 + 20], 18;
	rorq [r8 + r15 * 1], 1;
	rorq [r8 + r15 * 1], 18;
	rorq [r8 + r15 * 1 + 20], 1;
	rorq [r8 + r15 * 1 + 20], 18;
	rorq [r8 + r15 * 8], 1;
	rorq [r8 + r15 * 8], 18;
	rorq [r8 + r15 * 8 + 20], 1;
	rorq [r8 + r15 * 8 + 20], 18;
	rorq [r9 + rax * 1], 1;
	rorq [r9 + rax * 1], 18;
	rorq [r9 + rax * 1 + 20], 1;
	rorq [r9 + rax * 1 + 20], 18;
	rorq [r9 + rax * 8], 1;
	rorq [r9 + rax * 8], 18;
	rorq [r9 + rax * 8 + 20], 1;
	rorq [r9 + rax * 8 + 20], 18;
	rorq [r9 + r15 * 1], 1;
	rorq [r9 + r15 * 1], 18;
	rorq [r9 + r15 * 1 + 20], 1;
	rorq [r9 + r15 * 1 + 20], 18;
	rorq [r9 + r15 * 8], 1;
	rorq [r9 + r15 * 8], 18;
	rorq [r9 + r15 * 8 + 20], 1;
	rorq [r9 + r15 * 8 + 20], 18;
	rorq [r10 + rax * 1], 1;
	rorq [r10 + rax * 1], 18;
	rorq [r10 + rax * 1 + 20], 1;
	rorq [r10 + rax * 1 + 20], 18;
	rorq [r10 + rax * 8], 1;
	rorq [r10 + rax * 8], 18;
	rorq [r10 + rax * 8 + 20], 1;
	rorq [r10 + rax * 8 + 20], 18;
	rorq [r10 + r15 * 1], 1;
	rorq [r10 + r15 * 1], 18;
	rorq [r10 + r15 * 1 + 20], 1;
	rorq [r10 + r15 * 1 + 20], 18;
	rorq [r10 + r15 * 8], 1;
	rorq [r10 + r15 * 8], 18;
	rorq [r10 + r15 * 8 + 20], 1;
	rorq [r10 + r15 * 8 + 20], 18;
	rorq [r11 + rax * 1], 1;
	rorq [r11 + rax * 1], 18;
	rorq [r11 + rax * 1 + 20], 1;
	rorq [r11 + rax * 1 + 20], 18;
	rorq [r11 + rax * 8], 1;
	rorq [r11 + rax * 8], 18;
	rorq [r11 + rax * 8 + 20], 1;
	rorq [r11 + rax * 8 + 20], 18;
	rorq [r11 + r15 * 1], 1;
	rorq [r11 + r15 * 1], 18;
	rorq [r11 + r15 * 1 + 20], 1;
	rorq [r11 + r15 * 1 + 20], 18;
	rorq [r11 + r15 * 8], 1;
	rorq [r11 + r15 * 8], 18;
	rorq [r11 + r15 * 8 + 20], 1;
	rorq [r11 + r15 * 8 + 20], 18;
	rorq [r12 + rax * 1], 1;
	rorq [r12 + rax * 1], 18;
	rorq [r12 + rax * 1 + 20], 1;
	rorq [r12 + rax * 1 + 20], 18;
	rorq [r12 + rax * 8], 1;
	rorq [r12 + rax * 8], 18;
	rorq [r12 + rax * 8 + 20], 1;
	rorq [r12 + rax * 8 + 20], 18;
	rorq [r12 + r15 * 1], 1;
	rorq [r12 + r15 * 1], 18;
	rorq [r12 + r15 * 1 + 20], 1;
	rorq [r12 + r15 * 1 + 20], 18;
	rorq [r12 + r15 * 8], 1;
	rorq [r12 + r15 * 8], 18;
	rorq [r12 + r15 * 8 + 20], 1;
	rorq [r12 + r15 * 8 + 20], 18;
	rorq [r13 + rax * 1], 1;
	rorq [r13 + rax * 1], 18;
	rorq [r13 + rax * 1 + 20], 1;
	rorq [r13 + rax * 1 + 20], 18;
	rorq [r13 + rax * 8], 1;
	rorq [r13 + rax * 8], 18;
	rorq [r13 + rax * 8 + 20], 1;
	rorq [r13 + rax * 8 + 20], 18;
	rorq [r13 + r15 * 1], 1;
	rorq [r13 + r15 * 1], 18;
	rorq [r13 + r15 * 1 + 20], 1;
	rorq [r13 + r15 * 1 + 20], 18;
	rorq [r13 + r15 * 8], 1;
	rorq [r13 + r15 * 8], 18;
	rorq [r13 + r15 * 8 + 20], 1;
	rorq [r13 + r15 * 8 + 20], 18;
	rorq [r14 + rax * 1], 1;
	rorq [r14 + rax * 1], 18;
	rorq [r14 + rax * 1 + 20], 1;
	rorq [r14 + rax * 1 + 20], 18;
	rorq [r14 + rax * 8], 1;
	rorq [r14 + rax * 8], 18;
	rorq [r14 + rax * 8 + 20], 1;
	rorq [r14 + rax * 8 + 20], 18;
	rorq [r14 + r15 * 1], 1;
	rorq [r14 + r15 * 1], 18;
	rorq [r14 + r15 * 1 + 20], 1;
	rorq [r14 + r15 * 1 + 20], 18;
	rorq [r14 + r15 * 8], 1;
	rorq [r14 + r15 * 8], 18;
	rorq [r14 + r15 * 8 + 20], 1;
	rorq [r14 + r15 * 8 + 20], 18;
	rorq [r15 + rax * 1], 1;
	rorq [r15 + rax * 1], 18;
	rorq [r15 + rax * 1 + 20], 1;
	rorq [r15 + rax * 1 + 20], 18;
	rorq [r15 + rax * 8], 1;
	rorq [r15 + rax * 8], 18;
	rorq [r15 + rax * 8 + 20], 1;
	rorq [r15 + rax * 8 + 20], 18;
	rorq [r15 + r15 * 1], 1;
	rorq [r15 + r15 * 1], 18;
	rorq [r15 + r15 * 1 + 20], 1;
	rorq [r15 + r15 * 1 + 20], 18;
	rorq [r15 + r15 * 8], 1;
	rorq [r15 + r15 * 8], 18;
	rorq [r15 + r15 * 8 + 20], 1;
	rorq [r15 + r15 * 8 + 20], 18;
      );
      jit.finalize();
      let mut buf = std::fs::File::create("tests/rorq_monoasm.bin").unwrap();
      buf.write_all(jit.as_slice()).unwrap();
  }
