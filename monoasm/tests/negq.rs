  extern crate monoasm;
  extern crate monoasm_macro;
  use std::io::Write;

  use monoasm::*;
  use monoasm_macro::monoasm;

  #[test]
  fn negq() {
      let mut jit: JitMemory = JitMemory::new();
      monoasm!(
          &mut jit,
	negq rax;
	negq rcx;
	negq rdx;
	negq rbx;
	negq rsp;
	negq rbp;
	negq rsi;
	negq rdi;
	negq r8;
	negq r9;
	negq r10;
	negq r11;
	negq r12;
	negq r13;
	negq r14;
	negq r15;
	negq [rax];
	negq [rax + 16];
	negq [rax + 512];
	negq [rcx];
	negq [rcx + 16];
	negq [rcx + 512];
	negq [rdx];
	negq [rdx + 16];
	negq [rdx + 512];
	negq [rbx];
	negq [rbx + 16];
	negq [rbx + 512];
	negq [rsp];
	negq [rsp + 16];
	negq [rsp + 512];
	negq [rbp];
	negq [rbp + 16];
	negq [rbp + 512];
	negq [rsi];
	negq [rsi + 16];
	negq [rsi + 512];
	negq [rdi];
	negq [rdi + 16];
	negq [rdi + 512];
	negq [r8];
	negq [r8 + 16];
	negq [r8 + 512];
	negq [r9];
	negq [r9 + 16];
	negq [r9 + 512];
	negq [r10];
	negq [r10 + 16];
	negq [r10 + 512];
	negq [r11];
	negq [r11 + 16];
	negq [r11 + 512];
	negq [r12];
	negq [r12 + 16];
	negq [r12 + 512];
	negq [r13];
	negq [r13 + 16];
	negq [r13 + 512];
	negq [r14];
	negq [r14 + 16];
	negq [r14 + 512];
	negq [r15];
	negq [r15 + 16];
	negq [r15 + 512];
	negq [rip];
	negq [rip + 16];
	negq [rip + 512];
	negq [rax + rax * 1];
	negq [rax + rax * 1 + 20];
	negq [rax + rax * 8];
	negq [rax + rax * 8 + 20];
	negq [rax + r15 * 1];
	negq [rax + r15 * 1 + 20];
	negq [rax + r15 * 8];
	negq [rax + r15 * 8 + 20];
	negq [rcx + rax * 1];
	negq [rcx + rax * 1 + 20];
	negq [rcx + rax * 8];
	negq [rcx + rax * 8 + 20];
	negq [rcx + r15 * 1];
	negq [rcx + r15 * 1 + 20];
	negq [rcx + r15 * 8];
	negq [rcx + r15 * 8 + 20];
	negq [rdx + rax * 1];
	negq [rdx + rax * 1 + 20];
	negq [rdx + rax * 8];
	negq [rdx + rax * 8 + 20];
	negq [rdx + r15 * 1];
	negq [rdx + r15 * 1 + 20];
	negq [rdx + r15 * 8];
	negq [rdx + r15 * 8 + 20];
	negq [rbx + rax * 1];
	negq [rbx + rax * 1 + 20];
	negq [rbx + rax * 8];
	negq [rbx + rax * 8 + 20];
	negq [rbx + r15 * 1];
	negq [rbx + r15 * 1 + 20];
	negq [rbx + r15 * 8];
	negq [rbx + r15 * 8 + 20];
	negq [rsp + rax * 1];
	negq [rsp + rax * 1 + 20];
	negq [rsp + rax * 8];
	negq [rsp + rax * 8 + 20];
	negq [rsp + r15 * 1];
	negq [rsp + r15 * 1 + 20];
	negq [rsp + r15 * 8];
	negq [rsp + r15 * 8 + 20];
	negq [rbp + rax * 1];
	negq [rbp + rax * 1 + 20];
	negq [rbp + rax * 8];
	negq [rbp + rax * 8 + 20];
	negq [rbp + r15 * 1];
	negq [rbp + r15 * 1 + 20];
	negq [rbp + r15 * 8];
	negq [rbp + r15 * 8 + 20];
	negq [rsi + rax * 1];
	negq [rsi + rax * 1 + 20];
	negq [rsi + rax * 8];
	negq [rsi + rax * 8 + 20];
	negq [rsi + r15 * 1];
	negq [rsi + r15 * 1 + 20];
	negq [rsi + r15 * 8];
	negq [rsi + r15 * 8 + 20];
	negq [rdi + rax * 1];
	negq [rdi + rax * 1 + 20];
	negq [rdi + rax * 8];
	negq [rdi + rax * 8 + 20];
	negq [rdi + r15 * 1];
	negq [rdi + r15 * 1 + 20];
	negq [rdi + r15 * 8];
	negq [rdi + r15 * 8 + 20];
	negq [r8 + rax * 1];
	negq [r8 + rax * 1 + 20];
	negq [r8 + rax * 8];
	negq [r8 + rax * 8 + 20];
	negq [r8 + r15 * 1];
	negq [r8 + r15 * 1 + 20];
	negq [r8 + r15 * 8];
	negq [r8 + r15 * 8 + 20];
	negq [r9 + rax * 1];
	negq [r9 + rax * 1 + 20];
	negq [r9 + rax * 8];
	negq [r9 + rax * 8 + 20];
	negq [r9 + r15 * 1];
	negq [r9 + r15 * 1 + 20];
	negq [r9 + r15 * 8];
	negq [r9 + r15 * 8 + 20];
	negq [r10 + rax * 1];
	negq [r10 + rax * 1 + 20];
	negq [r10 + rax * 8];
	negq [r10 + rax * 8 + 20];
	negq [r10 + r15 * 1];
	negq [r10 + r15 * 1 + 20];
	negq [r10 + r15 * 8];
	negq [r10 + r15 * 8 + 20];
	negq [r11 + rax * 1];
	negq [r11 + rax * 1 + 20];
	negq [r11 + rax * 8];
	negq [r11 + rax * 8 + 20];
	negq [r11 + r15 * 1];
	negq [r11 + r15 * 1 + 20];
	negq [r11 + r15 * 8];
	negq [r11 + r15 * 8 + 20];
	negq [r12 + rax * 1];
	negq [r12 + rax * 1 + 20];
	negq [r12 + rax * 8];
	negq [r12 + rax * 8 + 20];
	negq [r12 + r15 * 1];
	negq [r12 + r15 * 1 + 20];
	negq [r12 + r15 * 8];
	negq [r12 + r15 * 8 + 20];
	negq [r13 + rax * 1];
	negq [r13 + rax * 1 + 20];
	negq [r13 + rax * 8];
	negq [r13 + rax * 8 + 20];
	negq [r13 + r15 * 1];
	negq [r13 + r15 * 1 + 20];
	negq [r13 + r15 * 8];
	negq [r13 + r15 * 8 + 20];
	negq [r14 + rax * 1];
	negq [r14 + rax * 1 + 20];
	negq [r14 + rax * 8];
	negq [r14 + rax * 8 + 20];
	negq [r14 + r15 * 1];
	negq [r14 + r15 * 1 + 20];
	negq [r14 + r15 * 8];
	negq [r14 + r15 * 8 + 20];
	negq [r15 + rax * 1];
	negq [r15 + rax * 1 + 20];
	negq [r15 + rax * 8];
	negq [r15 + rax * 8 + 20];
	negq [r15 + r15 * 1];
	negq [r15 + r15 * 1 + 20];
	negq [r15 + r15 * 8];
	negq [r15 + r15 * 8 + 20];
      );
      jit.finalize();
      let mut buf = std::fs::File::create("tests/negq_monoasm.bin").unwrap();
      buf.write_all(jit.as_slice()).unwrap();
  }
