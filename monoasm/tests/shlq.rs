  extern crate monoasm;
  extern crate monoasm_macro;
  use std::io::Write;

  use monoasm::*;
  use monoasm_macro::monoasm;

  #[test]
  fn shlq() {
      let mut jit: JitMemory = JitMemory::new();
      monoasm!(
          jit,
	shlq rax, 1;
	shlq rax, 18;
	shlq rcx, 1;
	shlq rcx, 18;
	shlq rdx, 1;
	shlq rdx, 18;
	shlq rbx, 1;
	shlq rbx, 18;
	shlq rsp, 1;
	shlq rsp, 18;
	shlq rbp, 1;
	shlq rbp, 18;
	shlq rsi, 1;
	shlq rsi, 18;
	shlq rdi, 1;
	shlq rdi, 18;
	shlq r8, 1;
	shlq r8, 18;
	shlq r9, 1;
	shlq r9, 18;
	shlq r10, 1;
	shlq r10, 18;
	shlq r11, 1;
	shlq r11, 18;
	shlq r12, 1;
	shlq r12, 18;
	shlq r13, 1;
	shlq r13, 18;
	shlq r14, 1;
	shlq r14, 18;
	shlq r15, 1;
	shlq r15, 18;
	shlq [rax], 1;
	shlq [rax], 18;
	shlq [rax + 16], 1;
	shlq [rax + 16], 18;
	shlq [rax + 512], 1;
	shlq [rax + 512], 18;
	shlq [rcx], 1;
	shlq [rcx], 18;
	shlq [rcx + 16], 1;
	shlq [rcx + 16], 18;
	shlq [rcx + 512], 1;
	shlq [rcx + 512], 18;
	shlq [rdx], 1;
	shlq [rdx], 18;
	shlq [rdx + 16], 1;
	shlq [rdx + 16], 18;
	shlq [rdx + 512], 1;
	shlq [rdx + 512], 18;
	shlq [rbx], 1;
	shlq [rbx], 18;
	shlq [rbx + 16], 1;
	shlq [rbx + 16], 18;
	shlq [rbx + 512], 1;
	shlq [rbx + 512], 18;
	shlq [rsp], 1;
	shlq [rsp], 18;
	shlq [rsp + 16], 1;
	shlq [rsp + 16], 18;
	shlq [rsp + 512], 1;
	shlq [rsp + 512], 18;
	shlq [rbp], 1;
	shlq [rbp], 18;
	shlq [rbp + 16], 1;
	shlq [rbp + 16], 18;
	shlq [rbp + 512], 1;
	shlq [rbp + 512], 18;
	shlq [rsi], 1;
	shlq [rsi], 18;
	shlq [rsi + 16], 1;
	shlq [rsi + 16], 18;
	shlq [rsi + 512], 1;
	shlq [rsi + 512], 18;
	shlq [rdi], 1;
	shlq [rdi], 18;
	shlq [rdi + 16], 1;
	shlq [rdi + 16], 18;
	shlq [rdi + 512], 1;
	shlq [rdi + 512], 18;
	shlq [r8], 1;
	shlq [r8], 18;
	shlq [r8 + 16], 1;
	shlq [r8 + 16], 18;
	shlq [r8 + 512], 1;
	shlq [r8 + 512], 18;
	shlq [r9], 1;
	shlq [r9], 18;
	shlq [r9 + 16], 1;
	shlq [r9 + 16], 18;
	shlq [r9 + 512], 1;
	shlq [r9 + 512], 18;
	shlq [r10], 1;
	shlq [r10], 18;
	shlq [r10 + 16], 1;
	shlq [r10 + 16], 18;
	shlq [r10 + 512], 1;
	shlq [r10 + 512], 18;
	shlq [r11], 1;
	shlq [r11], 18;
	shlq [r11 + 16], 1;
	shlq [r11 + 16], 18;
	shlq [r11 + 512], 1;
	shlq [r11 + 512], 18;
	shlq [r12], 1;
	shlq [r12], 18;
	shlq [r12 + 16], 1;
	shlq [r12 + 16], 18;
	shlq [r12 + 512], 1;
	shlq [r12 + 512], 18;
	shlq [r13], 1;
	shlq [r13], 18;
	shlq [r13 + 16], 1;
	shlq [r13 + 16], 18;
	shlq [r13 + 512], 1;
	shlq [r13 + 512], 18;
	shlq [r14], 1;
	shlq [r14], 18;
	shlq [r14 + 16], 1;
	shlq [r14 + 16], 18;
	shlq [r14 + 512], 1;
	shlq [r14 + 512], 18;
	shlq [r15], 1;
	shlq [r15], 18;
	shlq [r15 + 16], 1;
	shlq [r15 + 16], 18;
	shlq [r15 + 512], 1;
	shlq [r15 + 512], 18;
	shlq [rip], 1;
	shlq [rip], 18;
	shlq [rip + 16], 1;
	shlq [rip + 16], 18;
	shlq [rip + 512], 1;
	shlq [rip + 512], 18;
	shlq rax, 1;
	shlq rax, 18;
	shlq rcx, 1;
	shlq rcx, 18;
	shlq rdx, 1;
	shlq rdx, 18;
	shlq rbx, 1;
	shlq rbx, 18;
	shlq rsp, 1;
	shlq rsp, 18;
	shlq rbp, 1;
	shlq rbp, 18;
	shlq rsi, 1;
	shlq rsi, 18;
	shlq rdi, 1;
	shlq rdi, 18;
	shlq r8, 1;
	shlq r8, 18;
	shlq r9, 1;
	shlq r9, 18;
	shlq r10, 1;
	shlq r10, 18;
	shlq r11, 1;
	shlq r11, 18;
	shlq r12, 1;
	shlq r12, 18;
	shlq r13, 1;
	shlq r13, 18;
	shlq r14, 1;
	shlq r14, 18;
	shlq r15, 1;
	shlq r15, 18;
	shlq [rax], 1;
	shlq [rax], 18;
	shlq [rax + 16], 1;
	shlq [rax + 16], 18;
	shlq [rax + 512], 1;
	shlq [rax + 512], 18;
	shlq [rcx], 1;
	shlq [rcx], 18;
	shlq [rcx + 16], 1;
	shlq [rcx + 16], 18;
	shlq [rcx + 512], 1;
	shlq [rcx + 512], 18;
	shlq [rdx], 1;
	shlq [rdx], 18;
	shlq [rdx + 16], 1;
	shlq [rdx + 16], 18;
	shlq [rdx + 512], 1;
	shlq [rdx + 512], 18;
	shlq [rbx], 1;
	shlq [rbx], 18;
	shlq [rbx + 16], 1;
	shlq [rbx + 16], 18;
	shlq [rbx + 512], 1;
	shlq [rbx + 512], 18;
	shlq [rsp], 1;
	shlq [rsp], 18;
	shlq [rsp + 16], 1;
	shlq [rsp + 16], 18;
	shlq [rsp + 512], 1;
	shlq [rsp + 512], 18;
	shlq [rbp], 1;
	shlq [rbp], 18;
	shlq [rbp + 16], 1;
	shlq [rbp + 16], 18;
	shlq [rbp + 512], 1;
	shlq [rbp + 512], 18;
	shlq [rsi], 1;
	shlq [rsi], 18;
	shlq [rsi + 16], 1;
	shlq [rsi + 16], 18;
	shlq [rsi + 512], 1;
	shlq [rsi + 512], 18;
	shlq [rdi], 1;
	shlq [rdi], 18;
	shlq [rdi + 16], 1;
	shlq [rdi + 16], 18;
	shlq [rdi + 512], 1;
	shlq [rdi + 512], 18;
	shlq [r8], 1;
	shlq [r8], 18;
	shlq [r8 + 16], 1;
	shlq [r8 + 16], 18;
	shlq [r8 + 512], 1;
	shlq [r8 + 512], 18;
	shlq [r9], 1;
	shlq [r9], 18;
	shlq [r9 + 16], 1;
	shlq [r9 + 16], 18;
	shlq [r9 + 512], 1;
	shlq [r9 + 512], 18;
	shlq [r10], 1;
	shlq [r10], 18;
	shlq [r10 + 16], 1;
	shlq [r10 + 16], 18;
	shlq [r10 + 512], 1;
	shlq [r10 + 512], 18;
	shlq [r11], 1;
	shlq [r11], 18;
	shlq [r11 + 16], 1;
	shlq [r11 + 16], 18;
	shlq [r11 + 512], 1;
	shlq [r11 + 512], 18;
	shlq [r12], 1;
	shlq [r12], 18;
	shlq [r12 + 16], 1;
	shlq [r12 + 16], 18;
	shlq [r12 + 512], 1;
	shlq [r12 + 512], 18;
	shlq [r13], 1;
	shlq [r13], 18;
	shlq [r13 + 16], 1;
	shlq [r13 + 16], 18;
	shlq [r13 + 512], 1;
	shlq [r13 + 512], 18;
	shlq [r14], 1;
	shlq [r14], 18;
	shlq [r14 + 16], 1;
	shlq [r14 + 16], 18;
	shlq [r14 + 512], 1;
	shlq [r14 + 512], 18;
	shlq [r15], 1;
	shlq [r15], 18;
	shlq [r15 + 16], 1;
	shlq [r15 + 16], 18;
	shlq [r15 + 512], 1;
	shlq [r15 + 512], 18;
	shlq [rip], 1;
	shlq [rip], 18;
	shlq [rip + 16], 1;
	shlq [rip + 16], 18;
	shlq [rip + 512], 1;
	shlq [rip + 512], 18;
      );
      jit.finalize();
      let mut buf = std::fs::File::create("tests/shlq_monoasm.bin").unwrap();
      buf.write_all(jit.as_slice()).unwrap();
  }
